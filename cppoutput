!=	1
!cb->data)	1
!num_read)	1
"");	3
"",	1
"--help")	1
"--number")	1
"-h")	1
"-n")	1
"Counldn't	1
"r");	1
#define	1
#include	5
%38sinstead	1
%=	3
%s	1
%s\n",	1
&&	1
'\0'	1
'\n')	1
(!buffer)	1
(!buffer->data)	1
(!cb	1
(!discard_rest)	2
(!exceeded)	1
(!file_read)	1
(!stream)	1
(!tmp_string)	2
((strcmp(argv[i],	1
((tmp_char	1
(NUM	1
(argc	1
(cb->count	2
(cb->count)	1
(cb->data[i])	1
(i	1
(int	1
(kind	1
(old_string)	1
(size	2
(size_t	1
(strcmp(argv[i],	1
(tmp_char	1
(tmp_string)	1
*));	1
**argv)	1
**data;	1
*/	2
*buffer	1
*cb	1
*cb)	2
*cb,	2
*cb_create(size_t	1
*cb_get(cb_t	1
*cb_put(cb_t	1
*curr_line	1
*file_name)	1
*line)	1
*old_string	1
*stream	1
*stream)	1
*tmp_string	1
+	4
++i)	1
++i;	1
--help	1
--help%26sprints	1
--number	2
-h	1
-n	2
/*	2
//	23
0	3
0)	3
0),\n\	1
0;	8
1	1
1)	2
1),	1
10	1
10.0.0-4ubuntu1	1
10;	1
10\n\n",	1
18.4.2023	1
1;	5
1]);	1
4095	1
<	3
<=	1
<limits.h>	1
<stdbool.h>	1
<stdio.h>	1
<stdlib.h>	1
<string.h>	1
=	32
==	7
>	3
>=	1
Autor:	1
EOF)	1
FILE	3
FILE,	1
FIT	1
IJC-DU2,	1
LONG_MAX)	1
MAX_LINE_SIZE	1
MAX_LINE_SIZE)	1
Mandatory	1
Matyáš	1
NULL;	3
NUM	1
NUM%20soutput	1
OPTION%30sFUNCTION\n",	1
Oujezdský,	1
Přeloženo:	1
With	1
[FILE]\n",	1
[OPTION]	1
\n	2
a	4
allocate	4
allocated	1
and	7
are	1
argc	1
argc,	1
argc;	1
argument	4
arguments	1
argv[i]);	1
array	1
at	4
atoi(argv[i	1
be	2
big	1
bool	4
buffer	6
buffer->count	1
buffer->data	1
buffer->end	1
buffer->size	1
buffer->start	1
buffer;	1
buffer\n",	2
by	2
calloc(n,	1
cb	1
cb->count++;	1
cb->count--;	1
cb->data[cb->end++]	1
cb->data[cb->end];	1
cb->data[cb->start++];	1
cb->end	1
cb->size)	1
cb->size;	4
cb->start	2
cb->start++;	1
cb_create(size);	1
cb_free(cb);	1
cb_free(cb_t	1
cb_get(cb));	1
cb_put	2
cb_put(cb,	1
cb_t	3
cb_t;	1
char	8
character	1
chech	1
check	1
circular	3
circural	1
clang	1
count;	1
curr_line;	1
current	1
cycle	1
discard_rest	2
each	2
else	2
empty\n",	1
end	1
end;	1
every	1
exceeded	2
false;	4
fgetc(stream))	1
file	4
file_name);	1
file_read	2
first	2
fopen(argv[i],	1
for	7
fprintf(stderr,	1
fputs("buffer	1
fputs("couldn't	3
fputs("exceeded	1
free	1
free(buffer);	1
free(cb);	1
free(cb->data);	1
free(cb->data[i]);	1
free(tmp_string);	1
from	1
happens	1
help	2
help\n",	1
i	8
i++)	1
i++;	1
if	24
in	3
increase	2
index	2
input	1
input.\n\n\	1
inputed	1
instance	1
int	3
is	3
it	2
last	4
length\n",	1
line	5
line;	1
lines	5
long	1
loop	1
main(int	1
make	1
malloc(MAX_LINE_SIZE);	2
malloc(sizeof(cb_t));	1
mandatory	1
max	1
memory	4
must	1
n)	1
n;	1
name	1
names	1
neccesary	1
negative	1
next	3
no	1
not	1
num_read	2
number	4
numbers	1
of	11
old_string;	1
only	1
open	2
options	2
or	5
output.\n\n\	1
part	1
passed,	2
pointer	5
print	2
print_help(argv[0]);	3
print_help(char	1
printf("%s\n",	1
printf("-h,	1
printf("-n,	1
printf("Print	1
printf("Usage:	1
příklad	1
read	6
read_file(cb,	1
read_file(cb_t	1
reads	1
return	13
return;	1
self-explainatory)	1
send	1
sends	1
set	1
short	1
size	3
size;	1
size_t	5
sizeof(char	1
skip	1
so	2
standard	2
start;	1
stderr);	5
stdin;	1
strcmp(argv[i],	2
stream	1
stream);	1
string	3
struct	1
sure	1
tail.c	1
the	12
there	1
this	2
tmp_char;	2
tmp_string	2
tmp_string",	1
tmp_string);	1
tmp_string[i]	2
to	8
too	1
too.\n\n\	1
true;	4
typedef	1
version	1
void	3
was	2
while	2
with	2
write	2
zero	1
{	34
||	4
}	34
Řešení	1
